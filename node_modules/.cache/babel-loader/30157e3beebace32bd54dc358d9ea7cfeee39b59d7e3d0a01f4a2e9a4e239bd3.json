{"ast":null,"code":"export const fnGetNow = function (dateObj) {\n  // 현재 정보만 구해오는 애\n  let dayArr = ['sun', 'mon', 'tue', 'wed', 'thr', 'fri', 'sat'];\n  let day = dayArr[dateObj.getDay()];\n  let year = dateObj.getFullYear();\n  let month = dateObj.getMonth() + 1;\n  month = month < 10 ? '0' + month : month;\n  let date = dateObj.getDate();\n  date = date < 10 ? '0' + date : date;\n  let ap = dateObj.getHours() <= 12 ? 'AM' : 'PM';\n  let hour = dateObj.getHours() <= 12 ? dateObj.getHours() : dateObj.getHours() - 12;\n  hour = hour < 10 ? '0' + hour : hour;\n  let min = dateObj.getMinutes();\n  min = min < 10 ? '0' + min : min;\n  let sec = dateObj.getSeconds();\n  sec = sec < 10 ? '0' + sec : sec;\n  return {\n    day,\n    year,\n    month,\n    date,\n    ap,\n    hour,\n    min,\n    sec\n  };\n};\n\n/* 로컬스토리지에 값이 있는지 없는지 알아보기 */\nexport const fnDdayArrInit = function () {\n  /* 로컬스토리지에 값 가져오기 */\n  let ddayArrStorage = localStorage.getItem('ddayArrStorage');\n  /* ddayArrStorage가 트루라면 JSON.parse로 바꿔서 ddayArr에 넣고, false면 빈 배열을 출력하기*/\n  let ddayArr = ddayArrStorage ?\n  // 사용자 dday배열이 로컬스토리지에 존재한다면\n  JSON.parse(ddayArrStorage) // 로컬스토리지 배열을 리턴한다.\n  :\n  //사용자 dday배열이 로컬스토리지에 없다면\n  [{}];\n  return ddayArr;\n};","map":{"version":3,"names":["fnGetNow","dateObj","dayArr","day","getDay","year","getFullYear","month","getMonth","date","getDate","ap","getHours","hour","min","getMinutes","sec","getSeconds","fnDdayArrInit","ddayArrStorage","localStorage","getItem","ddayArr","JSON","parse"],"sources":["C:/Users/tj-bu-702-24/OneDrive/바탕 화면/박지은/REACT/calc/src/js/dday.js"],"sourcesContent":["export const fnGetNow = function (dateObj) {\r\n  // 현재 정보만 구해오는 애\r\n  let dayArr = ['sun', 'mon', 'tue', 'wed', 'thr', 'fri', 'sat']\r\n  let day = dayArr[dateObj.getDay()]\r\n  let year = dateObj.getFullYear()\r\n  let month = dateObj.getMonth() + 1\r\n  month = (month < 10) ? '0' + month : month\r\n  let date = dateObj.getDate()\r\n  date = (date < 10) ? '0' + date : date\r\n  let ap = (dateObj.getHours() <= 12) ? 'AM' : 'PM'\r\n  let hour = (dateObj.getHours() <= 12) ? dateObj.getHours() : dateObj.getHours() - 12\r\n  hour = (hour < 10) ? '0' + hour : hour\r\n  let min = dateObj.getMinutes()\r\n  min = (min < 10) ? '0' + min : min\r\n  let sec = dateObj.getSeconds()\r\n  sec = (sec < 10) ? '0' + sec : sec\r\n\r\n\r\n  return { day, year, month, date, ap, hour, min, sec }\r\n}\r\n\r\n/* 로컬스토리지에 값이 있는지 없는지 알아보기 */\r\nexport const fnDdayArrInit = function () {\r\n  /* 로컬스토리지에 값 가져오기 */\r\n  let ddayArrStorage = localStorage.getItem('ddayArrStorage')\r\n  /* ddayArrStorage가 트루라면 JSON.parse로 바꿔서 ddayArr에 넣고, false면 빈 배열을 출력하기*/\r\n  let ddayArr = (ddayArrStorage)\r\n    ? // 사용자 dday배열이 로컬스토리지에 존재한다면\r\n    JSON.parse(ddayArrStorage) // 로컬스토리지 배열을 리턴한다.\r\n    : //사용자 dday배열이 로컬스토리지에 없다면\r\n    [ \r\n      {\r\n\r\n      },\r\n    ]\r\n  return ddayArr\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,SAAAA,CAAUC,OAAO,EAAE;EACzC;EACA,IAAIC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAC9D,IAAIC,GAAG,GAAGD,MAAM,CAACD,OAAO,CAACG,MAAM,CAAC,CAAC,CAAC;EAClC,IAAIC,IAAI,GAAGJ,OAAO,CAACK,WAAW,CAAC,CAAC;EAChC,IAAIC,KAAK,GAAGN,OAAO,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC;EAClCD,KAAK,GAAIA,KAAK,GAAG,EAAE,GAAI,GAAG,GAAGA,KAAK,GAAGA,KAAK;EAC1C,IAAIE,IAAI,GAAGR,OAAO,CAACS,OAAO,CAAC,CAAC;EAC5BD,IAAI,GAAIA,IAAI,GAAG,EAAE,GAAI,GAAG,GAAGA,IAAI,GAAGA,IAAI;EACtC,IAAIE,EAAE,GAAIV,OAAO,CAACW,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAI,IAAI,GAAG,IAAI;EACjD,IAAIC,IAAI,GAAIZ,OAAO,CAACW,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAIX,OAAO,CAACW,QAAQ,CAAC,CAAC,GAAGX,OAAO,CAACW,QAAQ,CAAC,CAAC,GAAG,EAAE;EACpFC,IAAI,GAAIA,IAAI,GAAG,EAAE,GAAI,GAAG,GAAGA,IAAI,GAAGA,IAAI;EACtC,IAAIC,GAAG,GAAGb,OAAO,CAACc,UAAU,CAAC,CAAC;EAC9BD,GAAG,GAAIA,GAAG,GAAG,EAAE,GAAI,GAAG,GAAGA,GAAG,GAAGA,GAAG;EAClC,IAAIE,GAAG,GAAGf,OAAO,CAACgB,UAAU,CAAC,CAAC;EAC9BD,GAAG,GAAIA,GAAG,GAAG,EAAE,GAAI,GAAG,GAAGA,GAAG,GAAGA,GAAG;EAGlC,OAAO;IAAEb,GAAG;IAAEE,IAAI;IAAEE,KAAK;IAAEE,IAAI;IAAEE,EAAE;IAAEE,IAAI;IAAEC,GAAG;IAAEE;EAAI,CAAC;AACvD,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,SAAAA,CAAA,EAAY;EACvC;EACA,IAAIC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EAC3D;EACA,IAAIC,OAAO,GAAIH,cAAc;EACzB;EACFI,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC,CAAC;EAAA;EACzB;EACF,CACE,CAEA,CAAC,CACF;EACH,OAAOG,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}