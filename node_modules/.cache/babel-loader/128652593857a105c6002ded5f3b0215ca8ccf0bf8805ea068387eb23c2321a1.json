{"ast":null,"code":"export var fnGetDateInfo=function fnGetDateInfo(yymmdd){var dday=new Date(yymmdd);// new Date(`2024-01-01T00:00`)\nvar dayArr=['sun','mon','tue','wed','thr','fri','sat'];var day=dayArr[dday.getDay()];var year=dday.getFullYear();var month=dday.getMonth()+1;month=month<10?'0'+month:month;var date=dday.getDate();date=date<10?'0'+date:date;var ap=dday.getHours()<=12?'AM':'PM';var hour=dday.getHours()<=12?dday.getHours():dday.getHours()-12;hour=hour<10?'0'+hour:hour;var min=dday.getMinutes();min=min<10?'0'+min:min;var sec=dday.getSeconds();sec=sec<10?'0'+sec:sec;var timeStamp=dday.getTime();return{day:day,year:year,month:month,date:date,ap:ap,hour:hour,min:min,sec:sec,timeStamp:timeStamp};};// fnGetDateInfo\n/* 로컬스토리지에 값이 있는지 없는지 알아보기 */export var fnDdayArrInit=function fnDdayArrInit(){/* 로컬스토리지에 값 가져오기 */var ddayArrStorage=localStorage.getItem('ddayArrStorage');/* ddayArrStorage가 트루라면 JSON.parse로 바꿔서 ddayArr에 넣고, false면 빈 배열을 출력하기*/var ddayArr=ddayArrStorage?// 사용자 dday배열이 로컬스토리지에 존재한다면\nJSON.parse(ddayArrStorage)// 로컬스토리지 배열을 리턴한다.\n://사용자 dday배열이 로컬스토리지에 없다면\n[{id:Date.now(),title:' 새해 (Sample data)',Dday:new Date().getFullYear()+1+'-01-01T00:00'// 다음년도 1월1일\n}];return ddayArr;};// fnDdayArrInit\n/*  */export var fnTimer=function fnTimer(DdayTimeStamp){var diffTimeStamp=DdayTimeStamp-Date.now();var diffSec=parseInt(diffTimeStamp/1000);// 1초를 1000으로 계산하니까 나눠야한다.\nvar remain;var remainDays=parseInt(diffSec/(60*60*24));remain=parseInt(diffSec%(60*60*24));var remainHours=parseInt(remain/(60*60));remain=parseInt(remain%(60*60));var remainMinutes=parseInt(remain/60);var remainSecs=parseInt(remain%60);// 더이상 나눌 수 없음 / 최종적으로 구해진 값 ! 초\nif(diffTimeStamp<0){remainDays=0;remainHours=0;remainMinutes=0;remainSecs=0;}return{remainDays:remainDays,remainHours:remainHours,remainMinutes:remainMinutes,remainSecs:remainSecs};};// fnTimer","map":{"version":3,"names":["fnGetDateInfo","yymmdd","dday","Date","dayArr","day","getDay","year","getFullYear","month","getMonth","date","getDate","ap","getHours","hour","min","getMinutes","sec","getSeconds","timeStamp","getTime","fnDdayArrInit","ddayArrStorage","localStorage","getItem","ddayArr","JSON","parse","id","now","title","Dday","fnTimer","DdayTimeStamp","diffTimeStamp","diffSec","parseInt","remain","remainDays","remainHours","remainMinutes","remainSecs"],"sources":["C:/Users/tj-bu-702-24/OneDrive/바탕 화면/박지은/REACT/calc/src/js/dday.js"],"sourcesContent":["export const fnGetDateInfo = function (yymmdd) {\r\n  let dday = new Date(yymmdd) // new Date(`2024-01-01T00:00`)\r\n  let dayArr = ['sun', 'mon', 'tue', 'wed', 'thr', 'fri', 'sat']\r\n  let day = dayArr[dday.getDay()]\r\n  let year = dday.getFullYear()\r\n  let month = dday.getMonth() + 1\r\n  month = (month < 10) ? '0' + month : month\r\n  let date = dday.getDate()\r\n  date = (date < 10) ? '0' + date : date\r\n  let ap = (dday.getHours() <= 12) ? 'AM' : 'PM'\r\n  let hour = (dday.getHours() <= 12) ? dday.getHours() : dday.getHours() - 12\r\n  hour = (hour < 10) ? '0' + hour : hour\r\n  let min = dday.getMinutes()\r\n  min = (min < 10) ? '0' + min : min\r\n  let sec = dday.getSeconds()\r\n  sec = (sec < 10) ? '0' + sec : sec\r\n  let timeStamp = dday.getTime()\r\n\r\n\r\n  return { day, year, month, date, ap, hour, min, sec, timeStamp }\r\n} // fnGetDateInfo\r\n\r\n/* 로컬스토리지에 값이 있는지 없는지 알아보기 */\r\nexport const fnDdayArrInit = function () {\r\n  /* 로컬스토리지에 값 가져오기 */\r\n  let ddayArrStorage = localStorage.getItem('ddayArrStorage')\r\n  /* ddayArrStorage가 트루라면 JSON.parse로 바꿔서 ddayArr에 넣고, false면 빈 배열을 출력하기*/\r\n  let ddayArr = (ddayArrStorage)\r\n    ? // 사용자 dday배열이 로컬스토리지에 존재한다면\r\n    JSON.parse(ddayArrStorage) // 로컬스토리지 배열을 리턴한다.\r\n    : //사용자 dday배열이 로컬스토리지에 없다면\r\n    [\r\n      {\r\n        id: Date.now(),\r\n        title: ' 새해 (Sample data)',\r\n        Dday: new Date().getFullYear() + 1 + '-01-01T00:00' // 다음년도 1월1일\r\n      },\r\n    ]\r\n  return ddayArr\r\n} // fnDdayArrInit\r\n\r\n/*  */\r\nexport const fnTimer = function (DdayTimeStamp) {\r\n  let diffTimeStamp = DdayTimeStamp - Date.now()\r\n  let diffSec = parseInt(diffTimeStamp / 1000) // 1초를 1000으로 계산하니까 나눠야한다.\r\n  let remain\r\n  let remainDays = parseInt(diffSec / (60 * 60 * 24))\r\n  remain = parseInt(diffSec % (60 * 60 * 24))\r\n  let remainHours = parseInt(remain / (60 * 60))\r\n  remain = parseInt(remain % (60 * 60))\r\n  let remainMinutes = parseInt(remain / 60)\r\n  let remainSecs = parseInt(remain % 60) // 더이상 나눌 수 없음 / 최종적으로 구해진 값 ! 초\r\n  if (diffTimeStamp < 0) {\r\n    remainDays = 0; remainHours = 0; remainMinutes = 0; remainSecs = 0\r\n  }\r\n\r\n  return { remainDays, remainHours, remainMinutes, remainSecs }\r\n} // fnTimer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}