{"ast":null,"code":"/* 디폴트 체크 초기속성값을 객체로 리턴하는 함수만들어 */\n\nexport const fnSetObj = function (n) {\n  let _chkObj = {};\n  for (let i = 1; i <= 2; i++) {\n    _chkObj[i] = false;\n  }\n  _chkObj[n] = true;\n  return _chkObj;\n};\n// export const fnSetDegree = (gender, bmi/* 사용자가 남자,여자인지 받아오고, 사용자의 bmi받아오기 */) => {\n//   let min = (gender === 'male') ? 15 : 20\n//   let max = (gender === 'male') ? 40 : 45\n//   let ratio = (bmi - min) / (max - min)\n//   if (ratio < 0) ratio = 0\n//   if (ratio > 1) ratio = 1\n//   let deg = ratio * 180\n//   return deg\n// }\nexport const fnCheckBMI = (gender, cm, kg) => {\n  let m = cm * 0.01; //(m/100)\n  let bmi = (kg / (m * m)).toFixed(2);\n  let fillColor;\n  let morphN; // 사람번호\n  let deg;\n  /* 사람클래스 이름, 사람색깔 */\n  if (gender === 'male' && bmi < 15 || gender === 'female' && bmi < 20) {\n    //마름\n    morphN = 1;\n    fillColor = '#8eacc9';\n  } else if (gender === 'male' && bmi >= 15 && bmi < 20 || gender === 'female' && bmi >= 20 && bmi < 25) {\n    //저체중\n    morphN = 2;\n    fillColor = '#99CC';\n  } else if (gender === 'male' && bmi >= 20 && bmi < 25 || gender === 'female' && bmi >= 25 && bmi < 30) {\n    //정상\n    morphN = 3;\n    fillColor = '#fdd500';\n  } else if (gender === 'male' && bmi >= 25 && bmi < 30 || gender === 'female' && bmi >= 30 && bmi < 35) {\n    //과체중\n    morphN = 4;\n    fillColor = '#f5881f';\n  } else {\n    //비만\n    morphN = 5;\n    fillColor = ' #ef5023';\n  }\n\n  /* 저울 각도 구하기 */\n  let max = gender === 'male' ? 35 : 40;\n  let min = gender === 'female' ? 10 : 15;\n  deg = (bmi - min) / (max - min) * 180;\n  if (deg < 0) deg = 0;\n  if (deg > 180) deg = 180;\n\n  /* 에러 여부 확인*/\n  // let err = (bmi <= 3 || bmi > 80)?true:false\n  let err = (bmi < 8 || bmi > 60) && true; // 위에꺼랑 같은 문법임 !\n\n  if (!err) {\n    let timeoutID;\n    clearTimeout(timeoutID);\n    timeoutID = setTimeout(() => {\n      window.TweenMax.to('.manorg', 1, {\n        morphSVG: `.man${morphN}`,\n        fill: fillColor,\n        ease: window.Linear.easeNone\n      });\n      window.TweenMax.to('.womanorg', 1, {\n        morphSVG: `.woman${morphN}`,\n        fill: fillColor,\n        ease: window.Linear.easeNone\n      });\n    }, 500);\n  }\n  return {\n    bmi,\n    deg,\n    err\n  };\n};\n\n/* \r\n남자 bmi범위\r\n20~40 경우\r\n20(비율0)이 나오면 0\r\n30(비율0.5)이 나오면 90\r\n40(비율1)이 나오면 180\r\n\r\n\r\n여자 bmi 범위\r\n  30~50의 경우\r\n  30(비율0)이 나오면 0\r\n  40(비율0.5)이 나오면 90\r\n  50(비율1)이 나오면 180\r\n  \r\n  비율 구하는 공식\r\n  \r\n  범위 : (bmi-min)/(max - min)\r\n  \r\n  비율 * 적용할 범위\r\n  \r\n  조건을 걸어서 0미만이나 1을 초과할 수 없게 해야 함\r\n  */","map":{"version":3,"names":["fnSetObj","n","_chkObj","i","fnCheckBMI","gender","cm","kg","m","bmi","toFixed","fillColor","morphN","deg","max","min","err","timeoutID","clearTimeout","setTimeout","window","TweenMax","to","morphSVG","fill","ease","Linear","easeNone"],"sources":["C:/Users/tj-bu-702-24/OneDrive/바탕 화면/박지은/REACT/calc/src/js/bmi.js"],"sourcesContent":["/* 디폴트 체크 초기속성값을 객체로 리턴하는 함수만들어 */\r\n\r\nexport const fnSetObj = function (n) {\r\n  let _chkObj = {}\r\n  for (let i = 1; i <= 2; i++) {\r\n    _chkObj[i] = false\r\n  }\r\n  _chkObj[n] = true\r\n  return _chkObj\r\n}\r\n// export const fnSetDegree = (gender, bmi/* 사용자가 남자,여자인지 받아오고, 사용자의 bmi받아오기 */) => {\r\n//   let min = (gender === 'male') ? 15 : 20\r\n//   let max = (gender === 'male') ? 40 : 45\r\n//   let ratio = (bmi - min) / (max - min)\r\n//   if (ratio < 0) ratio = 0\r\n//   if (ratio > 1) ratio = 1\r\n//   let deg = ratio * 180\r\n//   return deg\r\n// }\r\nexport const fnCheckBMI = (gender, cm, kg) => {\r\n  let m = cm * 0.01//(m/100)\r\n  let bmi = (kg / (m * m)).toFixed(2)\r\n  let fillColor\r\n  let morphN // 사람번호\r\n  let deg\r\n  /* 사람클래스 이름, 사람색깔 */\r\n  if ((gender === 'male' && bmi < 15) || (gender === 'female' && bmi < 20)) { //마름\r\n    morphN = 1;\r\n    fillColor = '#8eacc9'\r\n  } else if ((gender === 'male' && bmi >= 15 && bmi < 20) || (gender === 'female' && bmi >= 20 && bmi < 25)) { //저체중\r\n    morphN = 2;\r\n    fillColor = '#99CC'\r\n  } else if ((gender === 'male' && bmi >= 20 && bmi < 25) || (gender === 'female' && bmi >= 25 && bmi < 30)) {//정상\r\n    morphN = 3;\r\n    fillColor = '#fdd500'\r\n  } else if ((gender === 'male' && bmi >= 25 && bmi < 30) || (gender === 'female' && bmi >= 30 && bmi < 35)) {//과체중\r\n    morphN = 4;\r\n    fillColor = '#f5881f'\r\n  } else {//비만\r\n    morphN = 5;\r\n    fillColor = ' #ef5023'\r\n  }\r\n\r\n  /* 저울 각도 구하기 */\r\n  let max = (gender === 'male') ? 35 : 40\r\n  let min = (gender === 'female') ? 10 : 15\r\n  deg = ((bmi - min) / (max - min)) * 180\r\n  if (deg < 0) deg = 0\r\n  if (deg > 180) deg = 180\r\n\r\n  /* 에러 여부 확인*/\r\n  // let err = (bmi <= 3 || bmi > 80)?true:false\r\n  let err = (bmi < 8 || bmi > 60) && true // 위에꺼랑 같은 문법임 !\r\n\r\n  if (!err) {\r\n    let timeoutID\r\n    clearTimeout(timeoutID)\r\n    timeoutID = setTimeout(() => {\r\n      window.TweenMax.to('.manorg', 1, { morphSVG: `.man${morphN}`, fill: fillColor, ease: window.Linear.easeNone })\r\n      window.TweenMax.to('.womanorg', 1, { morphSVG: `.woman${morphN}`, fill: fillColor, ease: window.Linear.easeNone })\r\n    }, 500)\r\n  }\r\n  return { bmi, deg, err }\r\n}\r\n\r\n/* \r\n남자 bmi범위\r\n20~40 경우\r\n20(비율0)이 나오면 0\r\n30(비율0.5)이 나오면 90\r\n40(비율1)이 나오면 180\r\n\r\n\r\n여자 bmi 범위\r\n  30~50의 경우\r\n  30(비율0)이 나오면 0\r\n  40(비율0.5)이 나오면 90\r\n  50(비율1)이 나오면 180\r\n  \r\n  비율 구하는 공식\r\n  \r\n  범위 : (bmi-min)/(max - min)\r\n  \r\n  비율 * 적용할 범위\r\n  \r\n  조건을 걸어서 0미만이나 1을 초과할 수 없게 해야 함\r\n  */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}