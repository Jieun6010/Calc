{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tj-bu-702-24\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uBC15\\uC9C0\\uC740\\\\REACT\\\\calc\\\\src\\\\js\\\\Btns.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst btnArr = [{\n  type: 'clear',\n  char: /*#__PURE__*/_jsxDEV(\"i\", {\n    className: \"fa-solid fa-trash-can\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 25\n  }, this),\n  id: '1'\n}, {\n  type: 'string',\n  char: '(',\n  id: '2'\n}, {\n  type: 'string',\n  char: ')',\n  id: '3'\n}, {\n  type: 'string',\n  char: '/',\n  id: '4'\n}, {\n  type: 'string',\n  char: '7',\n  id: '5'\n}, {\n  type: 'string',\n  char: '8',\n  id: '6'\n}, {\n  type: 'string',\n  char: '9',\n  id: '7'\n}, {\n  type: 'string',\n  char: '*',\n  id: '8'\n}, {\n  type: 'string',\n  char: '4',\n  id: '9'\n}, {\n  type: 'string',\n  char: '5',\n  id: '10'\n}, {\n  type: 'string',\n  char: '6',\n  id: '11'\n}, {\n  type: 'string',\n  char: '-',\n  id: '12'\n}, {\n  type: 'string',\n  char: '1',\n  id: '13'\n}, {\n  type: 'string',\n  char: '2',\n  id: '14'\n}, {\n  type: 'string',\n  char: '3',\n  id: '15'\n}, {\n  type: 'string',\n  char: '+',\n  id: '16'\n}, {\n  type: 'del',\n  char: /*#__PURE__*/_jsxDEV(\"i\", {\n    className: \"fa-solid fa-eraser\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this),\n  id: '17'\n}, {\n  type: 'string',\n  char: '0',\n  id: '18'\n}, {\n  type: 'string',\n  char: '.',\n  id: '19'\n}, {\n  type: 'equal',\n  char: '=',\n  id: '20'\n}];\nconst fnSetOutput = (output, char, type) => {\n  if (type === 'string') {\n    output += char;\n  } else if (type === 'clear') {\n    output = '';\n  } else if (type === 'del') {\n    /* \r\n    slice\r\n    str = '가나다라'\r\n    str.slice(0,-1) //뒤에 한글자가 지워짐. -2는 두글자 지움\r\n    str.slice(1,str.length-1)\r\n    str.slice(1,2) -> '나다'\r\n    str.slice(0,2) -> '가나다'\r\n    */\n    output = output.slice(0, -1); // 뒤에 글자 하나 잘라서 다시 output이 받아먹고 리턴\n  } else {\n    const fn = new Function('alert()'); // new Function 문자열을 스크립트로 리터럴? 해줌\n    fn();\n  } // else\n  return output;\n};\nexport { btnArr, fnSetOutput };","map":{"version":3,"names":["btnArr","type","char","_jsxDEV","className","fileName","_jsxFileName","lineNumber","columnNumber","id","fnSetOutput","output","slice","fn","Function"],"sources":["C:/Users/tj-bu-702-24/OneDrive/바탕 화면/박지은/REACT/calc/src/js/Btns.js"],"sourcesContent":["const btnArr = [\r\n  {type : 'clear', char:<i className=\"fa-solid fa-trash-can\"></i>, id: '1',},\r\n  {type : 'string', char:'(', id: '2', },\r\n  {type : 'string', char:')', id: '3', },\r\n  {type : 'string', char:'/', id: '4', },\r\n  {type : 'string', char:'7', id: '5', },\r\n  {type : 'string', char:'8', id: '6', },\r\n  {type : 'string', char:'9', id: '7', },\r\n  {type : 'string', char:'*', id: '8', },\r\n  {type : 'string', char:'4', id: '9', },\r\n  {type : 'string', char:'5', id: '10',},\r\n  {type : 'string', char:'6', id: '11',},\r\n  {type : 'string', char:'-', id: '12',},\r\n  {type : 'string', char:'1', id: '13',},\r\n  {type : 'string', char:'2', id: '14',},\r\n  {type : 'string', char:'3', id: '15',},\r\n  {type : 'string', char:'+', id: '16',},\r\n  {type : 'del', char:<i className=\"fa-solid fa-eraser\"></i>, id: '17',},\r\n  {type : 'string', char:'0', id: '18',},\r\n  {type : 'string', char:'.', id: '19',},\r\n  {type : 'equal', char:'=', id: '20',  },\r\n]\r\n\r\nconst fnSetOutput = (output,char,type) => {\r\n  if(type === 'string'){\r\n    output += char\r\n  }else if(type === 'clear'){\r\n    output=''\r\n  }else if(type === 'del'){\r\n    /* \r\n    slice\r\n    str = '가나다라'\r\n    str.slice(0,-1) //뒤에 한글자가 지워짐. -2는 두글자 지움\r\n    str.slice(1,str.length-1)\r\n    str.slice(1,2) -> '나다'\r\n    str.slice(0,2) -> '가나다'\r\n    */\r\n    output = output.slice(0,-1) // 뒤에 글자 하나 잘라서 다시 output이 받아먹고 리턴\r\n  }else{\r\n    const fn = new Function('alert()') // new Function 문자열을 스크립트로 리터럴? 해줌\r\n    fn()\r\n  } // else\r\n  return output\r\n}\r\n\r\nexport {btnArr, fnSetOutput};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}